{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u30D7\\u30ED\\u30B0\\u30E9\\u30DF\\u30F3\\u30B0\\\\\\u4F5C\\u6210\\u7528\\uFF7A\\uFF70\\uFF84\\uFF9E\\\\React\\\\r1\\\\r1\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ListItem } from \"./components/ListItem\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null); /*ｴﾗｰ状態管理用*/\n\n  useEffect(() => {\n    axios.get(\"https://example.com/users\").then(res => {\n      setUsers(res.data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n\n  // エラーがある場合は仮のデータを表示する\n  if (error) {\n    // 仮のデータを作成\n    const mockUsers = [{\n      id: 1,\n      name: \"John\",\n      age: 30,\n      personalColor: \"blue\"\n    }, {\n      id: 2,\n      name: \"Jane\",\n      age: 25,\n      personalColor: \"green\"\n    }, {\n      id: 3,\n      name: \"Doe\",\n      age: 40,\n      personalColor: \"red\"\n    }];\n    /*ｴﾗｰの場合の表示*/\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error fetching data. Displaying mock data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: mockUsers.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n          id: user.id,\n          name: user.name,\n          age: user.age,\n          personalColor: user.personalColor,\n          hobbies: true\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  }\n  /*通常の表示*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n      id: user.id,\n      name: user.name,\n      age: user.age,\n      personalColor: user.personalColor,\n      hobbies: user.hobbies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EzIF/r0nrof1IaEDnzJcTKwoXvA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ListItem","axios","jsxDEV","_jsxDEV","App","_s","users","setUsers","error","setError","get","then","res","data","catch","mockUsers","id","name","age","personalColor","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","hobbies","_c","$RefreshReg$"],"sources":["D:/プログラミング/作成用ｺｰﾄﾞ/React/r1/r1/src/App.tsx"],"sourcesContent":["import {useEffect, useState}from \"react\";\nimport {ListItem} from \"./components/ListItem\";\nimport {User}from \"./types/user\"\nimport axios from \"axios\";\n\nexport const App = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [error,setError] = useState<any>(null);/*ｴﾗｰ状態管理用*/\n\n  useEffect(()=> {\n    axios.get<User[]>(\"https://example.com/users\")\n    .then((res)=>{setUsers(res.data);})\n    .catch((error)=>{setError(error);});\n  },[]);\n\n// エラーがある場合は仮のデータを表示する\nif (error) {\n  // 仮のデータを作成\n  const mockUsers: User[] = [\n    { id: 1, name: \"John\", age: 30, personalColor: \"blue\" },\n    { id: 2, name: \"Jane\", age: 25, personalColor: \"green\" },\n    { id: 3, name: \"Doe\", age: 40, personalColor: \"red\" }\n  ];\n/*ｴﾗｰの場合の表示*/\n  return (\n    <div>\n      <p>Error fetching data. Displaying mock data:</p>\n      <div>\n        {mockUsers.map(user => (\n          <ListItem key={user.id} id={user.id} name={user.name} age={user.age}\n          personalColor={user.personalColor} \n          hobbies/>\n        ))}\n      </div>\n    </div>\n  );\n}\n/*通常の表示*/\n  return(\n    <div>\n      {users.map(user=>(<ListItem id={user.id} name={user.name} age={user.age}\n      personalColor={user.personalColor}\n      hobbies={user.hobbies}/>))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAM,OAAO;AACxC,SAAQC,QAAQ,QAAO,uBAAuB;AAE9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAM,IAAI,CAAC,CAAC;;EAE7CD,SAAS,CAAC,MAAK;IACbG,KAAK,CAACS,GAAG,CAAS,2BAA2B,CAAC,CAC7CC,IAAI,CAAEC,GAAG,IAAG;MAACL,QAAQ,CAACK,GAAG,CAACC,IAAI,CAAC;IAAC,CAAC,CAAC,CAClCC,KAAK,CAAEN,KAAK,IAAG;MAACC,QAAQ,CAACD,KAAK,CAAC;IAAC,CAAC,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;;EAEP;EACA,IAAIA,KAAK,EAAE;IACT;IACA,MAAMO,SAAiB,GAAG,CACxB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,GAAG,EAAE,EAAE;MAAEC,aAAa,EAAE;IAAO,CAAC,EACvD;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,GAAG,EAAE,EAAE;MAAEC,aAAa,EAAE;IAAQ,CAAC,EACxD;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,GAAG,EAAE,EAAE;MAAEC,aAAa,EAAE;IAAM,CAAC,CACtD;IACH;IACE,oBACEhB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAG;MAA0C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjDrB,OAAA;QAAAiB,QAAA,EACGL,SAAS,CAACU,GAAG,CAACC,IAAI,iBACjBvB,OAAA,CAACH,QAAQ;UAAegB,EAAE,EAAEU,IAAI,CAACV,EAAG;UAACC,IAAI,EAAES,IAAI,CAACT,IAAK;UAACC,GAAG,EAAEQ,IAAI,CAACR,GAAI;UACpEC,aAAa,EAAEO,IAAI,CAACP,aAAc;UAClCQ,OAAO;QAAA,GAFQD,IAAI,CAACV,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EACA;EACE,oBACErB,OAAA;IAAAiB,QAAA,EACGd,KAAK,CAACmB,GAAG,CAACC,IAAI,iBAAGvB,OAAA,CAACH,QAAQ;MAACgB,EAAE,EAAEU,IAAI,CAACV,EAAG;MAACC,IAAI,EAAES,IAAI,CAACT,IAAK;MAACC,GAAG,EAAEQ,IAAI,CAACR,GAAI;MACxEC,aAAa,EAAEO,IAAI,CAACP,aAAc;MAClCQ,OAAO,EAAED,IAAI,CAACC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxCWD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA0ChB,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}